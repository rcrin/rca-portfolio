{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ramil Christian\\\\Desktop\\\\RCA-Portfolio\\\\rca-portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ramil Christian\\\\Desktop\\\\RCA-Portfolio\\\\rca-portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ramil Christian\\\\Desktop\\\\RCA-Portfolio\\\\rca-portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ramil Christian\\\\Desktop\\\\RCA-Portfolio\\\\rca-portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Ramil Christian\\\\Desktop\\\\RCA-Portfolio\\\\rca-portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { Feature } from '../Feature.mjs';\nvar id = 0;\nvar ExitAnimationFeature = /*#__PURE__*/function (_Feature) {\n  _inherits(ExitAnimationFeature, _Feature);\n  function ExitAnimationFeature() {\n    var _this;\n    _classCallCheck(this, ExitAnimationFeature);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExitAnimationFeature).apply(this, arguments));\n    _this.id = id++;\n    return _this;\n  }\n  _createClass(ExitAnimationFeature, [{\n    key: \"update\",\n    value: function update() {\n      var _this2 = this;\n      if (!this.node.presenceContext) return;\n      var _this$node$presenceCo = this.node.presenceContext,\n        isPresent = _this$node$presenceCo.isPresent,\n        onExitComplete = _this$node$presenceCo.onExitComplete,\n        custom = _this$node$presenceCo.custom;\n      var _ref = this.node.prevPresenceContext || {},\n        prevIsPresent = _ref.isPresent;\n      if (!this.node.animationState || isPresent === prevIsPresent) {\n        return;\n      }\n      var exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, {\n        custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom\n      });\n      if (onExitComplete && !isPresent) {\n        exitAnimation.then(function () {\n          return onExitComplete(_this2.id);\n        });\n      }\n    }\n  }, {\n    key: \"mount\",\n    value: function mount() {\n      var _ref2 = this.node.presenceContext || {},\n        register = _ref2.register;\n      if (register) {\n        this.unmount = register(this.id);\n      }\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {}\n  }]);\n  return ExitAnimationFeature;\n}(Feature);\nexport { ExitAnimationFeature };","map":null,"metadata":{},"sourceType":"module"}